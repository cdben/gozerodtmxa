// Code generated by goctl. DO NOT EDIT!
// Source: trans.proto

package transclient

import (
	"context"

	"xa/trans/trans"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AdjustInfo = trans.AdjustInfo
	Response   = trans.Response

	Trans interface {
		TransOutXa(ctx context.Context, in *AdjustInfo, opts ...grpc.CallOption) (*Response, error)
		TransInXa(ctx context.Context, in *AdjustInfo, opts ...grpc.CallOption) (*Response, error)
	}

	defaultTrans struct {
		cli zrpc.Client
	}
)

func NewTrans(cli zrpc.Client) Trans {
	return &defaultTrans{
		cli: cli,
	}
}

func (m *defaultTrans) TransOutXa(ctx context.Context, in *AdjustInfo, opts ...grpc.CallOption) (*Response, error) {
	client := trans.NewTransClient(m.cli.Conn())
	return client.TransOutXa(ctx, in, opts...)
}

func (m *defaultTrans) TransInXa(ctx context.Context, in *AdjustInfo, opts ...grpc.CallOption) (*Response, error) {
	client := trans.NewTransClient(m.cli.Conn())
	return client.TransInXa(ctx, in, opts...)
}
